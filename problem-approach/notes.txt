
Problem Solving Approach
- Creating an Approach
    1) Understand the Problem
        - Restate the problem in your own words to make sure you understand the problem
        - What are the inputs and what do they look like
        - What are the outputs and what do they look like
        - Can the outputs be determined from the inputs? Do I have enough information to solve the problem?
        - Label the most important pieces of data.
    2) Exploring Concrete Examples
        - Start with simple examples
        - Progress to more complex examples
        - explore examples with empty inputs
        - explore examples with invalid inputs
    3) Break down the problem
        - Write psuedo code breaking down each step you need to take and values needed.
    4) Solve the problem or solve the simplier problem
        - solve simplier problem
            1) Find the core difficulty in what you're trying to do
            2) Temporarily ignore the difficulty
            3) Write a simplified solution
            4) Then incorporate that difficulty back in
    5) Look Back & Refactor
        - Things to ask yourself when refactoring:
            1) Can you check the result?
            2) Can you derive the result differently?
            3) Can you understand it at a glance?
            4) Can you use the result or method for some other problem?
            5) Can you improve the performance of your solution?
            6) Can you think of other ways to refactor?
            7) How have other people solved this problem?
    




